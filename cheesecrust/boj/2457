import java.io.*;
import java.util.*;

public class Main {
    static BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        StringTokenizer st;

        int n = Integer.parseInt(br.readLine());

        List<Flower> flowers = new ArrayList<>();

        for (int i = 0 ; i < n; i++) {
            st = new StringTokenizer(br.readLine());

            int startMonth = Integer.parseInt(st.nextToken());
            int startDay = Integer.parseInt(st.nextToken());
            int lastMonth = Integer.parseInt(st.nextToken());
            int lastDay = Integer.parseInt(st.nextToken());

            int start = startMonth * 100 + startDay;
            int last=  lastMonth * 100 + lastDay;

            flowers.add(new Flower(start, last));
        }

        Collections.sort(flowers);

        int result = 0;
        int start = 301;
        int end = 1201;
        int max = 0;

        int index = 0;

        while (start < end) {
            boolean flag = false;

            for(int i = index; i < n; i++){

                if(flowers.get(i).start > start){
                    break;
                }

                if(flowers.get(i).start <= start && max < flowers.get(i).last){
                    flag = true;
                    index = i + 1;
                    max = flowers.get(i).last;
                }
            }

            if(!flag){
                result = 0;
                break;
            }

            start = max;
            result++;
        }

        bw.write(Integer.toString(result));

        bw.flush();

        bw.close();

    }

}

class Flower implements Comparable<Flower> {
    int start;
    int last;

    Flower(int start, int last){
        this.start = start;
        this.last = last;
    }

    // 시작일이 작고 종료일이 멀 수록 좋다
    @Override
    public int compareTo(Flower flower) {

        if(this.start < flower.start){
            return -1;
        }else if(this.start == flower.start){
            return Integer.compare(this.last, flower.last);
        }else{
            return 1;
        }
    }
}
