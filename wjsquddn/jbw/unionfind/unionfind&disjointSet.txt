목표
 - disjoint set과 union-find의 개념을 이해할 수 있다.
 - union-find 알고리즘을 구현할 수 있다.

 disjoint Set의 개념 - 서로소 집합 자료구조
  - 서로 중복되지 않은 부분 집합들로 나눠진 원소들에 대한 정보를 저장하고 조작하는 자료구조
union-find의 개념
 - 집합을 구현하는데는 벡터 배열 연결리스트를 이용할 수 있으나 그 중 가장 효율적인 트리구조를 이용하여 구현한다.

 union find의 연산
 -make-set(x)
    초기화, x를 유일한 원소로 하는 새로운 집합을 만든다.
 -union(x,y)
    합하기, x가 속한 집합과 y가 속한 집합을 합니다ㅣ. 즉, x와 y가 속한 두 집합을 합치는 연산
 -find(x)
    찾기, x가 속한 집합의 대표값을 반환한다. 즉, x가 어떤 집합에 속해 있는지 찾는 연산

최악의 상황
 - 트리 구조가 완전 비대칭인 경우
 - 연결 리스트 형태
 - 트리의 높이가 최대가 된다.
 - 원소의 개수가 n일 때, 트리의 높이가 n-1이므로 union과 find(x)의 시간 복잡도가 모두 o(n)이 된다.
 - 배열로 구현하는 것보다 비효율적

경로 압축(path compression) - O(logN)
