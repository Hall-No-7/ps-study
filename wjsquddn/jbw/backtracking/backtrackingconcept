각 후보군을 DFS(깊이 우선 탐색) 방식으로 확인
상태 공간 트리를 탐색하면서, 제약이 맞지 않으면 해의 후보가 될만한 다른 곳으로 바로 넘어가서 탐색

Promising: 해당 루트가 조건에 맞는지를 검사하는 기법
Pruning (가지치기): 조건에 맞지 않으면 포기하고 다른 루트로 바로 돌아서서, 탐색의 시간을 절약하는 기법

즉, 다시한번 요약하자면 백트래킹은 트리 구조를 기반으로 DFS로 깊이 탐색을 진행하면서 각 루트에 대해 조건에 부합하는지 체크(Promising - 솔루션이 될수 있는지), 
만약 해당 트리(나무)에서 조건에 맞지않는 노드는 더 이상 DFS로 깊이 탐색을 진행하지 않고, 가지를 쳐버림 (Pruning - 이 노드 아래의 모든 값들은 탐색할 필요가 없다) 라는 겁니다. 
https://buganddog.tistory.com/7
#include <iostream>

using namespace std;

int N; //체스판 사이즈  
int col[15];  
int result = 0;

bool promising(int i) 
{
	for(int j=0;j<i; j++)
	{
		if(col[j] == col[i] || abs(col[i]-col[j])==(i-j))
			return false;
	}
	return true;
}

void N_qeen(int i)
{
	if(i==N)
		result +=1;
	else 
	{
		for(int j=0 ; j<N, j++)
		{
			col[i] = j;
			if(promising(i))
			N_qeen(i+1);
		}
	}
}

int main()
{
	cin>>N;
	N_qeen(0);
	cout<<result<<endl;
	return 0; 
}
